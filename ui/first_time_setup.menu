#include "ui/menudef.h"
#include "ui_mp/common_macro.inc"
#include "ui/frame.inc"

#include "ui/framestyle.inc"
#include "ui/choices_setup_common.menu"


#undef CHOICE_Y_START
#define CHOICE_Y_START					-115

#define FRAME_TRANSITION( menuToClose, menuToOpen )						\
		execkeyint	BUTTON_A											\
		{																\
			execnow closemenu menuToClose;								\
			open first_time_blackout_3d_tv;								\
			open menuToOpen;											\
		}
	

{
	menuDef
	{
		name			first_time_blackout_3d_tv
		fullscreen		0
		ui3dWindowId	0
		forecolor		1 1 1 1
		backcolor		0 0 0 1
		style			WINDOW_STYLE_FILLED
		rect			0 0 640 480
		onEsc {}

		itemDef
		{
			type			ITEM_TYPE_OWNERDRAW
			ownerdraw		UI_NOISE
			rect			0 0 640 480
			forecolor		1 1 1 1
			visible			1
			background		"menu_tv_noise"
			decoration
		}
	}


#undef CHOICE_BUTTON_NAME
#define CHOICE_BUTTON_NAME		"first_time_audio_setup_"

#undef MENUDEF_NAME
#define MENUDEF_NAME			first_time_audio_setup

#undef CHOICE_GROUP
#define CHOICE_GROUP			"first_time_audio_setup_"


	menuDef
	{
		name					first_time_audio_setup
		rect					0 0 640 480
		focuscolor				COLOR_FOCUSED
		style					WINDOW_STYLE_FILLED
		priority				MENU_PRI_ONTOP
		soundloop 				MENU_MUSIC
		openSlideSpeed			DEFAULT_SLIDE_IN_SPEED
		closeSlideSpeed			DEFAULT_SLIDE_OUT_SPEED
		openSlideDirection		MENU_SLIDE_DIRECTION_TOP_TO_BOTTOM
		closeSlideDirection		MENU_SLIDE_DIRECTION_TOP_TO_BOTTOM
		control					MENU_CONTROL_PRIMARY

		onOpen
		{
			play uin_navigation_menu_lg_open;
			execnow ui_animate first_time_audio_setup * highlightOff 0;
		}
		onClose
		{
			play uin_navigation_menu_lg_close;
		}
		onEsc {}

		FRAME_TRANSITION( first_time_audio_setup, first_time_safe_area_adjust );

		FRAME_SP_DEFAULT
		FRAME_TITLE_DEFAULT( "@MENU_OPTIONS_CAPS" , 1 )
		FRAME_SUBTITLE_DEFAULT( "@MENU_AUDIO_SETTINGS_CAPS", 1 )

		#undef A_BUTTON_OFFSET_X
		#define A_BUTTON_OFFSET_X		100000

		#undef CHOICE_ACTION_SOUND
		#define CHOICE_ACTION_SOUND		"uin_navigation_slider"

		#undef CHOICE_SIZE_X
		#define CHOICE_SIZE_X			375
		
		FRAME_DVARSLIDER_FOCUS_VIS(	1, "@MENU_VOICE_VOLUME_CAPS",		snd_menu_voice,			1.0, 0.0, 1.0, 
									;, 
									SET_HINT_TEXT( "@MENU_VOICE_VOLUME_DESC" ),
									CLEARUIHINT,
									1 )
		FRAME_DVARSLIDER_FOCUS_VIS( 2, "@MENU_MUSIC_VOLUME_CAPS",		snd_menu_music,			1.0, 0.0, 1.0, 
									;, 
									SET_HINT_TEXT( "@MENU_MUSIC_VOLUME_DESC" ),
									CLEARUIHINT,
									1 )
		FRAME_DVARSLIDER_FOCUS_VIS( 3, "@MENU_SFX_VOLUME_CAPS",			snd_menu_sfx,			1.0, 0.0, 1.0, 
									;, 
									SET_HINT_TEXT( "@MENU_SFX_VOLUME_DESC" ),
									CLEARUIHINT,
									1 )
		FRAME_DVARSLIDER_FOCUS_VIS( 4, "@MENU_MASTER_VOLUME_CAPS",		snd_menu_master,		1.0, 0.0, 1.0, 
									;, 
									SET_HINT_TEXT( "@MENU_MASTER_VOLUME_DESC" ),
									CLEARUIHINT,
									1 )
		FRAME_DVARSLIDER_FOCUS_VIS( 5, "@MENU_CINEMATICS_VOLUME_CAPS",	snd_menu_cinematic,		1.0, 0.0, 1.0,
									;, 
									SET_HINT_TEXT( "@MENU_CINEMATICS_VOLUME_DESC" ),
									CLEARUIHINT,
									!dvarBool( ui_multiplayer ) )

		//#ifdef PS3
		// DDO - cut
		//FRAME_DVARSLIDER_FOCUS_VIS( 6, "@MENU_VOIP_VOLUME_CAPS",		ps3_voiceSpeakerGain,	1.0, 0.0, 1.0,
									//;, 
									//SET_HINT_TEXT( "@MENU_VOIP_VOLUME_DESC" ),
									//CLEARUIHINT,
									//1 )
		//#else //#ifdef PS3
		itemDef
		{
				name	volume_6
				type	ITEM_TYPE_BUTTON_NO_TEXT
				rect	0 0 0 0
				visible	0
				decoration
				state
				{
					name		"highlightOff"
				}
				state
				{
					name		"disabled"
				}
		}
		//#endif //#ifdef PS3

		FRAME_CHOICE_DVARFLOATLIST_FOCUS_VIS(	7, "@MENU_LISTENING_LEVEL_CAPS", snd_menu_listen_level,
												{ "@MENU_QUIET_CAPS" 0 "@MENU_LOUD_CAPS" 1 }, 
												;, 
												CLEARUIHINT,
												CLEARUIHINT,
												1 )

		FRAME_CHOICE_DVARFLOATLIST_FOCUS_VIS(	8, "@MENU_SPEAKER_SETUP_CAPS", snd_menu_speaker_setup,
												{ "@MENU_TV_CAPS" 0 "@MENU_THEATRE_CAPS" 1 "@MENU_HEADPHONES_CAPS" 2 }, 
												;, 
												CLEARUIHINT,
												CLEARUIHINT,
												1 )
		#undef A_BUTTON_OFFSET_X
		#define A_BUTTON_OFFSET_X 3

		#define HINT_Y_OFFSET					-8
		#define HINT_WIDTH						( FRAME_DEFAULT_WIDTH - 30 )
		// Normal hint text
		HINT_TEXT_ALL(	16, CHOICE_X_START, HINT_Y_OFFSET, HINT_WIDTH, dvarString( ui_hint_text ),			1 1 1 1, ( dvarBool( ui_show_arrow ) ),				; )

		// Listening level hint text
		#define LISTENING_SELECTED				( localVarInt( ui_highlight ) == 7 )

		#define LISTENING_SETTING( setting )	( dvarInt( snd_menu_listen_level ) == setting )
		#define LISTENING_QUIET					LISTENING_SETTING( 0 )
		#define LISTENING_LOUD					LISTENING_SETTING( 1 )
		
		HINT_TEXT_ALL( 16, CHOICE_X_START, HINT_Y_OFFSET, HINT_WIDTH, "@MENU_LISTENING_LEVEL_QUIET_DESC",	1 1 1 1, ( LISTENING_SELECTED && LISTENING_QUIET ),	; )
		HINT_TEXT_ALL( 16, CHOICE_X_START, HINT_Y_OFFSET, HINT_WIDTH, "@MENU_LISTENING_LEVEL_LOUD_DESC",	1 1 1 1, ( LISTENING_SELECTED && LISTENING_LOUD ),	; )

		// Speaker setup hint text
		#define SPEAKER_SELECTED				( localVarInt( ui_highlight ) == 8 )
		
		#define SPEAKER_SETTING( setting )		( dvarInt( snd_menu_speaker_setup ) == setting )
		#define SPEAKER_TV						SPEAKER_SETTING( 0 )
		#define SPEAKER_THEATER					SPEAKER_SETTING( 1 )
		#define SPEAKER_HEADPHONES				SPEAKER_SETTING( 2 )
		
		HINT_TEXT_ALL( 16, CHOICE_X_START, HINT_Y_OFFSET, HINT_WIDTH, "@MENU_SPEAKER_SETUP_TV_DESC",		 1 1 1 1, ( SPEAKER_SELECTED && SPEAKER_TV ),			; )
		HINT_TEXT_ALL( 16, CHOICE_X_START, HINT_Y_OFFSET, HINT_WIDTH, "@MENU_SPEAKER_SETUP_THEATER_DESC",	 1 1 1 1, ( SPEAKER_SELECTED && SPEAKER_THEATER ),		; )
		HINT_TEXT_ALL( 16, CHOICE_X_START, HINT_Y_OFFSET, HINT_WIDTH, "@MENU_SPEAKER_SETUP_HEADPHONES_DESC", 1 1 1 1, ( SPEAKER_SELECTED && SPEAKER_HEADPHONES ),	; )

		// TV
		#define SOUND_ON_ALPHA					0.8
		#define SOUND_OFF_ALPHA					0.3
		#define TV_COLOR						1 1 1 SOUND_ON_ALPHA
		#define TV_HEIGHT						60
		#define TV_WIDTH						100
		#define TV_X_START						( CHOICE_X_START + ( CHOICE_SIZE_X / 2 ) - ( TV_WIDTH / 2 ) )
		#define TV_Y_START						( CHOICE_Y( 10 ) + HINT_Y_OFFSET )

		PREPROC_SHADER_DRAW_VIS_EX( TV_X_START TV_Y_START TV_WIDTH TV_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN,
									"menu_mp_sound_tv", TV_COLOR,
									1, ; )
		

		// TV Sound lines
		#define LINES_COLOR						0.38 0.72 0.72 0.8 
		#define LINES1_HEIGHT					25
		#define LINES2_HEIGHT					35
		#define LINES_WIDTH						15
		#define TV_LINES1_LEFT_X_START			( TV_X_START - LINES_WIDTH )
		#define TV_LINES2_LEFT_X_START			( TV_LINES1_LEFT_X_START - ( LINES_WIDTH / 2 ) + 2 )
		#define TV_LINES1_RIGHT_X_START			( TV_X_START + TV_WIDTH )
		#define TV_LINES2_RIGHT_X_START			( TV_LINES1_RIGHT_X_START + ( LINES_WIDTH / 2 ) - 2 )
		#define TV_LINES1_Y_START				( TV_Y_START + ( TV_HEIGHT / 2 ) - ( LINES1_HEIGHT / 2 ) )
		#define TV_LINES2_Y_START				( TV_LINES1_Y_START - ( ( LINES2_HEIGHT - LINES1_HEIGHT ) / 2 ) )

		PREPROC_SHADER_DRAW_VIS_EX(	TV_LINES1_LEFT_X_START TV_LINES1_Y_START LINES_WIDTH LINES1_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines1", LINES_COLOR, 
									when( SPEAKER_TV );, 
									; )
		PREPROC_SHADER_DRAW_VIS_EX(	TV_LINES2_LEFT_X_START TV_LINES2_Y_START LINES_WIDTH LINES2_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines2", LINES_COLOR, 
									when( LISTENING_LOUD && SPEAKER_TV );, 
									; )
		
		PREPROC_SHADER_DRAW_VIS_EX(	TV_LINES1_RIGHT_X_START TV_LINES1_Y_START (-LINES_WIDTH) LINES1_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines1", LINES_COLOR, 
									when( SPEAKER_TV );, 
									; )
		PREPROC_SHADER_DRAW_VIS_EX(	TV_LINES2_RIGHT_X_START TV_LINES2_Y_START (-LINES_WIDTH) LINES2_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines2", LINES_COLOR, 
									when( LISTENING_LOUD && SPEAKER_TV );, 
									; )


		// Cables
		#define CABLES_Y_START					( TV_Y_START + TV_HEIGHT - 20 )
		#define CABLES_HEIGHT					TV_HEIGHT
		PREPROC_SHADER_DRAW_VIS_EX( TV_X_START CABLES_Y_START TV_WIDTH CABLES_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN,
									"menu_mp_sound_cables",	TV_COLOR,
									1,
									exp forecolor A ( Select( SPEAKER_THEATER, SOUND_OFF_ALPHA, SOUND_ON_ALPHA ) ) )


		// Speakers
		#define SPEAKER_HEIGHT					50
		#define SPEAKER_WIDTH					30
		#define SPEAKER_LEFT_X_START			( TV_X_START - SPEAKER_WIDTH + 1 )
		#define SPEAKER_RIGHT_X_START			( TV_X_START + TV_WIDTH - 1 )
		#define SPEAKER_Y_START					( CABLES_Y_START + CABLES_HEIGHT - SPEAKER_HEIGHT )

		PREPROC_SHADER_DRAW_VIS_EX( SPEAKER_LEFT_X_START SPEAKER_Y_START SPEAKER_WIDTH SPEAKER_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN,
									"menu_mp_sound_speaker", TV_COLOR, 
									1, 
									exp forecolor A ( Select( SPEAKER_THEATER, SOUND_ON_ALPHA, SOUND_OFF_ALPHA ) ) )
		
		PREPROC_SHADER_DRAW_VIS_EX( SPEAKER_RIGHT_X_START SPEAKER_Y_START (-SPEAKER_WIDTH) SPEAKER_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN,
									"menu_mp_sound_speaker", TV_COLOR, 
									1, 
									exp forecolor A ( Select( SPEAKER_THEATER, SOUND_ON_ALPHA, SOUND_OFF_ALPHA ) ) )


		// Speakers sound lines
		#define SPEAKER_LINES1_LEFT_X_START		( SPEAKER_LEFT_X_START - LINES_WIDTH )
		#define SPEAKER_LINES2_LEFT_X_START		( SPEAKER_LINES1_LEFT_X_START - ( LINES_WIDTH / 2 ) + 2 )
		#define SPEAKER_LINES1_RIGHT_X_START	( SPEAKER_RIGHT_X_START + SPEAKER_WIDTH )
		#define SPEAKER_LINES2_RIGHT_X_START	( SPEAKER_LINES1_RIGHT_X_START + ( LINES_WIDTH / 2 ) - 2 )
		#define SPEAKER_LINES1_Y_START			( SPEAKER_Y_START + ( SPEAKER_HEIGHT / 2 ) - ( LINES1_HEIGHT / 2 ) )
		#define SPEAKER_LINES2_Y_START			( SPEAKER_LINES1_Y_START - ( ( LINES2_HEIGHT - LINES1_HEIGHT ) / 2 ) )

		PREPROC_SHADER_DRAW_VIS_EX(	SPEAKER_LINES1_LEFT_X_START SPEAKER_LINES1_Y_START LINES_WIDTH LINES1_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines1", LINES_COLOR, 
									when( SPEAKER_THEATER );,
									; )
		PREPROC_SHADER_DRAW_VIS_EX(	SPEAKER_LINES2_LEFT_X_START SPEAKER_LINES2_Y_START LINES_WIDTH LINES2_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines2", LINES_COLOR, 
									when( LISTENING_LOUD && SPEAKER_THEATER );, 
									; )
		
		PREPROC_SHADER_DRAW_VIS_EX(	SPEAKER_LINES1_RIGHT_X_START SPEAKER_LINES1_Y_START (-LINES_WIDTH) LINES1_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines1", LINES_COLOR, 
									when( SPEAKER_THEATER );, 
									; )
		PREPROC_SHADER_DRAW_VIS_EX(	SPEAKER_LINES2_RIGHT_X_START SPEAKER_LINES2_Y_START (-LINES_WIDTH) LINES2_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines2", LINES_COLOR, 
									when( LISTENING_LOUD && SPEAKER_THEATER );, 
									; )


		// Headphones
		#define HEADPHONES_HEIGHT				40
		#define HEADPHONES_WIDTH				40
		#define HEADPHONES_X_START				( TV_X_START + ( TV_WIDTH / 2 ) - ( HEADPHONES_WIDTH / 2 ) )
		#define HEADPHONES_Y_START				( CABLES_Y_START + HEADPHONES_HEIGHT - 8 )//( CABLES_Y_START + CABLES_HEIGHT )

		PREPROC_SHADER_DRAW_VIS_EX( HEADPHONES_X_START HEADPHONES_Y_START HEADPHONES_WIDTH HEADPHONES_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN,
									"menu_mp_sound_headphones", TV_COLOR, 
									1, 
									exp forecolor A ( Select( SPEAKER_HEADPHONES, SOUND_ON_ALPHA, SOUND_OFF_ALPHA ) ) )
		

		#define HEADPHONES_LINES1_LEFT_X_START			( HEADPHONES_X_START - LINES_WIDTH )
		#define HEADPHONES_LINES2_LEFT_X_START			( HEADPHONES_LINES1_LEFT_X_START - ( LINES_WIDTH / 2 ) + 2 )
		#define HEADPHONES_LINES1_RIGHT_X_START			( HEADPHONES_X_START + HEADPHONES_WIDTH )
		#define HEADPHONES_LINES2_RIGHT_X_START			( HEADPHONES_LINES1_RIGHT_X_START + ( LINES_WIDTH / 2 ) - 2 )
		#define HEADPHONES_LINES1_Y_START				( HEADPHONES_Y_START + ( HEADPHONES_HEIGHT / 2 ) - ( LINES1_HEIGHT / 2 ) )
		#define HEADPHONES_LINES2_Y_START				( HEADPHONES_LINES1_Y_START - ( ( LINES2_HEIGHT - LINES1_HEIGHT ) / 2 ) )

		PREPROC_SHADER_DRAW_VIS_EX(	HEADPHONES_LINES1_LEFT_X_START HEADPHONES_LINES1_Y_START LINES_WIDTH LINES1_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines1", LINES_COLOR, 
									when( SPEAKER_HEADPHONES );, 
									; )
		PREPROC_SHADER_DRAW_VIS_EX(	HEADPHONES_LINES2_LEFT_X_START HEADPHONES_LINES2_Y_START LINES_WIDTH LINES2_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines2", LINES_COLOR, 
									when( LISTENING_LOUD && SPEAKER_HEADPHONES );, 
									; )
		
		PREPROC_SHADER_DRAW_VIS_EX(	HEADPHONES_LINES1_RIGHT_X_START HEADPHONES_LINES1_Y_START (-LINES_WIDTH) LINES1_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines1", LINES_COLOR, 
									when( SPEAKER_HEADPHONES );, 
									; )
		PREPROC_SHADER_DRAW_VIS_EX(	HEADPHONES_LINES2_RIGHT_X_START HEADPHONES_LINES2_Y_START (-LINES_WIDTH) LINES2_HEIGHT CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN, 
									"menu_mp_sound_lines2", LINES_COLOR, 
									when( LISTENING_LOUD && SPEAKER_HEADPHONES );, 
									; )

		FRAME_CONTINUE_BUTTON_DEFAULT

		#include "ui/safearea.menu"
	}

	#include "ui/safe_area_adjust.inc"

	#define VERT_TWEAK( mod ) execNow set safeAreaTweakable_vertical ( dvarfloat( "safeareatweakable_vertical" ) + mod )
	#define HORIZ_TWEAK( mod ) execNow set safeAreaTweakable_horizontal ( dvarfloat( "safeareatweakable_horizontal" ) + mod )

	//this is only used on the initial setup of a new profile
	menuDef
	{
		name				first_time_safe_area_adjust
		priority			MENU_PRI_POPUP 
		control				MENU_CONTROL_PRIMARY
		onEsc {}
				
		SAFE_AREA_BG_RECT( 1 )
		SAFE_AREA_ARROWS( 1 )
		
		itemDef
		{
			name			select
			type			ITEM_TYPE_TEXT
			text			"@PLATFORM_CONTINUE"
			textfont		UI_FONT_NORMAL
			textscale		TEXTSIZE_DEFAULT
			textalign		ITEM_ALIGN_CENTER
			rect			0 100 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER 
			visible			1;
			decoration
		}
		
		itemDef
		{
			name			select
			type			ITEM_TYPE_TEXT
			text			"@PLATFORM_SAFEAREA_INSTRUCTIONS"
			textfont		UI_FONT_NORMAL
			textscale		TEXTSIZE_DEFAULT
			textalign		ITEM_ALIGN_CENTER
			rect			0 -100 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER 
			visible			1;
			decoration
		}

		itemDef
		{
			visible 1
			type ITEM_TYPE_BUTTON_NO_TEXT
		
			execKeyInt DPAD_UP
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_vertical ( dvarfloat( "safeareatweakable_vertical" ) + float(0.005) );
				execNow setupviewport;
			}

			execKeyInt DPAD_DOWN
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_vertical ( dvarfloat( "safeareatweakable_vertical" ) - float(0.005) );
				execNow setupviewport;
			}

			execKeyInt DPAD_LEFT
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_horizontal ( dvarfloat( "safeareatweakable_horizontal" ) - float(0.005) );
				execNow setupviewport;
			}

			execKeyInt DPAD_RIGHT
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_horizontal ( dvarfloat( "safeareatweakable_horizontal" ) + float(0.005) );
				execNow setupviewport;
			}
			
			execKeyInt APAD_UP
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_vertical ( dvarfloat( "safeareatweakable_vertical" ) + float(0.005) );
				execNow setupviewport;
			}
			
			execKeyInt APAD_DOWN
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_vertical ( dvarfloat( "safeareatweakable_vertical" ) - float(0.005) );
				execNow setupviewport;
			}

			execKeyInt APAD_LEFT
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_horizontal ( dvarfloat( "safeareatweakable_horizontal" ) - float(0.005) );
				execNow setupviewport;
			}

			execKeyInt APAD_RIGHT
			{
				play "uin_navigation_over";
				execNow set safeAreaTweakable_horizontal ( dvarfloat( "safeareatweakable_horizontal" ) + float(0.005) );
				execNow setupviewport;
			}

			action
			{
				close self;
				open first_time_blackout_3d_tv;
				if( ( dvarint( loc_language ) == 0 ) )  //english
				{
					open first_time_mature_content_disable_warning;
				}
				elseif( ( dvarint( loc_language ) == 8 ) )	//russian
				{
					open russian_content_warning;
				}
				else
				{
#ifdef PS3
					execNow "updategamerprofile"; close self; open popmenu_autosave_warning_lockout;
#else //#ifdef PS3
					execNow "updategamerprofile"; close self; open main;
#endif //#ifdef PS3
				}
			}
		}
	}	

#undef CHOICE_BUTTON_NAME
#define CHOICE_BUTTON_NAME		"brightness_"

#undef MENUDEF_NAME
#define MENUDEF_NAME			first_time_gamma_setup

#undef CHOICE_GROUP
#define CHOICE_GROUP			"brightness_"

	// BRIGHTNESS MENU
	menuDef 
	{
		name					first_time_gamma_setup
		rect					0 0 640 480
		focuscolor				COLOR_FOCUSED
		style					WINDOW_STYLE_FILLED
		priority				MENU_PRI_ONTOP
		soundloop 				MENU_MUSIC
		openSlideSpeed			DEFAULT_SLIDE_IN_SPEED
		closeSlideSpeed			DEFAULT_SLIDE_OUT_SPEED
		openSlideDirection		MENU_SLIDE_DIRECTION_TOP_TO_BOTTOM
		closeSlideDirection		MENU_SLIDE_DIRECTION_TOP_TO_BOTTOM
#ifdef PS3
		control			MENU_CONTROL_PRIMARY
#endif //PS3


		onOpen
		{
			play uin_navigation_menu_lg_open;
		}
		onClose
		{
			play uin_navigation_menu_lg_close;
		}
		onEsc {}
		
		FRAME_SP_DEFAULT
		FRAME_TITLE_DEFAULT( "@MENU_OPTIONS_CAPS" , 1 )
		FRAME_SUBTITLE_DEFAULT( "@MENU_BRIGHTNESS_CAPS", 1 )

		FRAME_CONTINUE_BUTTON_DEFAULT
		
		// ------------------ TREE TITLE ------------------

		#define CHOICE_BG_BOX( itemIndex, blackLevel, visArg ) \
			itemDef \
			{ \
				style			WINDOW_STYLE_SHADER \
				rect			CHOICE_ORIGIN( itemIndex ) (CHOICE_SIZE_X-(CHOICE_SIZE_Y/4)) CHOICE_SIZE_Y CHOICE_HORIZONTAL_ALIGN CHOICE_VERTICAL_ALIGN \
				background		"white" \
				forecolor		blackLevel blackLevel blackLevel 1 \
				visible			visArg \
				decoration \
			}

		#undef CHOICE_SIZE_X
		#define CHOICE_SIZE_X					353//300
		
		#undef A_BUTTON_OFFSET_X
		#define A_BUTTON_OFFSET_X				100000

		#undef CHOICE_ACTION_SOUND
		#define CHOICE_ACTION_SOUND			"uin_navigation_slider"
				
		FRAME_DVARSLIDER_VIS_EX( 1, "@MENU_BRIGHTNESS_CAPS", r_gamma,  1.0, 0.5, 1.50, ;, ;, ;,1, FRAME_TRANSITION( first_time_gamma_setup, first_time_audio_setup ) )
		
		#undef CHOICE_ACTION_SOUND
		#define CHOICE_ACTION_SOUND				"uin_navigation_click"

		#undef A_BUTTON_OFFSET_X
		#define A_BUTTON_OFFSET_X				3

		#undef CHOICE_X_START
		#define CHOICE_X_START					(0-(CHOICE_SIZE_X/2))

		#undef CHOICE_SIZE_X
		#define CHOICE_SIZE_X					300

		#undef CHOICE_HORIZONTAL_ALIGN
		#define CHOICE_HORIZONTAL_ALIGN 		HORIZONTAL_ALIGN_CENTER

		#undef CHOICE_TEXTALIGN
		#define CHOICE_TEXTALIGN				ITEM_ALIGN_MIDDLE_CENTER

		#undef CHOICE_SIZE_Y
		#define CHOICE_SIZE_Y					60

		#undef CHOICE_Y_SPACING
		#define CHOICE_Y_SPACING				60

		#undef CHOICE_TEXT_OFFSET_X
		#define CHOICE_TEXT_OFFSET_X			0

		CHOICE_BG_BOX( 2, 0.062, 1 );
		CHOICE_BG_BOX( 3, 0.125, 1 );
		CHOICE_BG_BOX( 4, 0.250, 1 );

		CHOICE_CAPTION_COLOR_VIS( 2, "@MENU_BRIGHTNESS_NOT_VISIBLE", 0 0 0 1, 1 );
		CHOICE_CAPTION_COLOR_VIS( 3, "@MENU_BRIGHTNESS_BARELY_VISIBLE", 0 0 0 1, 1 );
		CHOICE_CAPTION_COLOR_VIS( 4, "@MENU_BRIGHTNESS_EASILY_VISIBLE", 0 0 0 1, 1 );

		#include "ui/safearea.menu"
	}
	#undef CHOICE_SEP_OFFSET_Y
	#define CHOICE_SEP_OFFSET_Y		-2

	#undef CHOICE_SEP_1
	#define CHOICE_SEP_1			3

	#include "ui_mp/popupstyle.inc"
	#include "ui/choices_setup_popmenu.menu"

	#undef CHOICE_TEXTALIGN
	#define CHOICE_TEXTALIGN					ITEM_ALIGN_MIDDLE_LEFT

	#undef CHOICE_TEXT_OFFSET_X
	#define CHOICE_TEXT_OFFSET_X				CHOICE_SIZE_Y

	#undef POPUP_BG_OVERLAY_COLOR
	#define POPUP_BG_OVERLAY_COLOR				0 0 0 0.0

	#define OPEN_MATURE_DISABLE \
			setfocus mature_content_disable_warning_2; \
			execnow "set cg_mature 1";\
			execnow "set cg_blood 1";

	menuDef
	{
		SYSTEM_POPUP_SETUP_VIS( first_time_mature_content_disable_warning, OPEN_MATURE_DISABLE, ;, 1 )
		control					MENU_CONTROL_PRIMARY
		onEsc {}
		SYSTEM_POPUP_TITLE_VIS( "@MENU_GRAPHIC_CONTENT_CAPS", 1 )
		SYSTEM_POPUP_SUBTITLE_VIS( "@MENU_DOYOUWANT_MATURE_CONTENT", 1 );
		
		#define DISABLE_CONTENT				\
				execNow "set cg_blood 0";	\
				execNow "set cg_mature 0";
				
#ifdef PS3				
		FRAME_CHOICE_BUTTON_VIS_EX( 1, "@MENU_YES_CAPS",	execNow "updategamerprofile"; close self; open popmenu_autosave_warning_lockout;, 1, name mature_content_disable_warning_2 )
		FRAME_CHOICE_BUTTON_VIS_EX( 2, "@MENU_NO_CAPS",		DISABLE_CONTENT; execNow "updategamerprofile"; close self; open popmenu_autosave_warning_lockout;,	1, ; )
#else		
		FRAME_CHOICE_BUTTON_VIS_EX( 1, "@MENU_YES_CAPS",	execNow "updategamerprofile"; close self; open main;, 1, name mature_content_disable_warning_2 )
		FRAME_CHOICE_BUTTON_VIS_EX( 2, "@MENU_NO_CAPS",		DISABLE_CONTENT; execNow "updategamerprofile"; close self; open main;,	1, ; )
#endif		
	}				


#undef POPUP_BUTTON_COUNT
#define POPUP_BUTTON_COUNT		1

	menuDef
	{
		SYSTEM_POPUP_SETUP_VIS( first_time_instructions, ;, ;, 1 )
		control					MENU_CONTROL_PRIMARY
		onEsc {}

		SYSTEM_POPUP_TITLE_VIS( "@MENU_SETUP_CAPS", 1 )

		PREPROC_TEXT_DRAW_VIS_EX(	CHOICE_X_START (POPUP_SIDE_PAD+SYSTEM_POPUP_TITLE_HEIGHT+10) (SYSTEM_POPUP_WIDTH-30) 100 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER,
									0 0, "@MENU_SETUP_INSTRUCTIONS", 
									TEXTSIZE_DEFAULT, 0, 0, ITEM_ALIGN_TOP_LEFT, 1 1 1 1, 1, autowrapped )
		
		FRAME_CHOICE_BUTTON_VIS_EX( 1, "@MENU_OK_CAPS",	close self;open first_time_blackout_3d_tv;open first_time_gamma_setup;,	1, ; )
	}				

#undef CHOICE_X_START
#define CHOICE_X_START					-270

#undef CHOICE_SIZE_X
#define CHOICE_SIZE_X					150

	menuDef
	{
		name					russian_content_warning
		rect					0 0 640 480
		focuscolor				COLOR_FOCUSED
		style					WINDOW_STYLE_FILLED
		soundloop 				MENU_MUSIC
		openSlideSpeed			DEFAULT_SLIDE_IN_SPEED
		closeSlideSpeed			DEFAULT_SLIDE_OUT_SPEED
		openSlideDirection		MENU_SLIDE_DIRECTION_TOP_TO_BOTTOM
		closeSlideDirection		MENU_SLIDE_DIRECTION_TOP_TO_BOTTOM
		control					MENU_CONTROL_PRIMARY

		onOpen	{ play uin_navigation_menu_lg_open; }

		onESC	{ }
		onClose	{ }

		FRAME_SP_DEFAULT

		FRAME_TITLE_DEFAULT( "@MENU_RUSSIAN_CONTENT_WARNING_TITLE", 1 )

		#define TITLE_NAME_X				-270
		#define TITLE_NAME_Y				-150
		#define TITLE_NAME_SIZE				200 20

		#define WARNING_DESC_X				-270
		#define WARNING_DESC_Y				(TITLE_NAME_Y+25)
		#define WARNING_DESC_SIZE			(FRAME_DEFAULT_WIDTH-25) (FRAME_DEFAULT_HEIGHT)

		PREPROC_TEXT_DRAW_VIS_EX( WARNING_DESC_X WARNING_DESC_Y WARNING_DESC_SIZE HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER, 0 0, 
						  "@MENU_RUSSIAN_CONTENT_WARNING", 
						  TEXTSIZE_DEFAULT, 0, 0, ITEM_ALIGN_TOP_LEFT, WHITE,
						  1, autowrapped )

		FRAME_CHOICE_BUTTON_VIS_EX( 1, "@MENU_OK_CAPS",	execNow "updategamerprofile"; play uin_navigation_menu_lg_close; close self; open main;,	1, ; )

		#include "ui/safearea.menu"
	}
}

