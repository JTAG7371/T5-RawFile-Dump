// SPECTATOR HUD - MP

#define SPLITSCREEN_ENABLED	1

#include "ui/menudef.h"
#include "ui_mp/common_macro.inc"

#define HUD_ALPHA				0.65
#define	BOTTOM_RECT_X			0
#define	BOTTOM_RECT_Y			0
#define SPEC_HUD_WIDTH			(160*SPLITSCREEN_MULTIPLIER)

#include "ui_mp/menustyle.inc"
#include "ui/choices_setup_common.menu"

{
	assetGlobalDef
	{
		fadeClamp		1					// sets the fadeup alpha
		fadeCycle		1					// how often fade happens in milliseconds
		fadeAmount		0.1					// amount to adjust alpha per cycle
	}
	
	// game messages
	//menuDef
	//{
	//	name			"spec_gamemessages_ss"
	//	rect			(6*SPLITSCREEN_MULTIPLIER) (-120*SPLITSCREEN_MULTIPLIER) (10*SPLITSCREEN_MULTIPLIER) (10*SPLITSCREEN_MULTIPLIER) HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
	//	fullScreen		0
	//	visible			1
	//	visibilityBits	bits( !BIT_IN_KILLCAM BIT_SPECTATING_CLIENT )
	//	
	//	itemDef
	//	{
	//		rect				0 0 0 0
	//		type				ITEM_TYPE_GAME_MESSAGE_WINDOW
	//		gamemsgwindowindex	0
	//		gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
	//		textfont			UI_FONT_DEFAULT
	//		textstyle			ITEM_TEXTSTYLE_SHADOWED
	//		textalign			ITEM_ALIGN_LEFT
	//		textscale			TEXTSIZE_SMALL
	//		visible				1
	//		visibilityBits		bits( !BIT_UI_ACTIVE BIT_HUD_OBITUARIES )
	//	}
	//}

	menuDef
	{
		name			"hud_spectator_ss"
		rect			BOTTOM_RECT_X BOTTOM_RECT_Y 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		1
		visibilityBits	bits( !BIT_UI_ACTIVE BIT_SPECTATING_CLIENT )
		
		#define SHOULD_SHOW_MAP				0
		#define MAP_X						(-750*SPLITSCREEN_MULTIPLIER)
		#define MAP_Y						0
		#define MAP_WIDTH					(168*SPLITSCREEN_MULTIPLIER)
		#define MAP_HEIGHT					(188*SPLITSCREEN_MULTIPLIER)
		#define SHOW_TEXT_ON_MAP			0
		#define MAP_ALPHA					0.7
		#undef SHOW_TEXT_ON_MAP
		#undef MAP_ALPHA
		#define TEAM_SCORE_HORIZ_SPACING	(5*SPLITSCREEN_MULTIPLIER)
		#define TEAM_SCORE_VERT_SPACING		(3*SPLITSCREEN_MULTIPLIER)
		#define TEAM_SCORE_HEIGHT			(32*SPLITSCREEN_MULTIPLIER)
		#define TEAM_SCORE_BG_WIDTH			(SPEC_HUD_WIDTH/2-TEAM_SCORE_HORIZ_SPACING/2)
		#define TEAM_ICON_VERT_MARGIN		(2*SPLITSCREEN_MULTIPLIER)
		#define TEAM_ICON_HORIZ_MARGIN		(5*SPLITSCREEN_MULTIPLIER)
		#define TEAM_ICON_SIZE				(TEAM_SCORE_HEIGHT-TEAM_ICON_VERT_MARGIN*2)
		
		#undef	BACKGROUND_H
		#define BACKGROUND_H				(20*SPLITSCREEN_MULTIPLIER)
		
		#undef	BACKGROUND_W
		#define BACKGROUND_W				( (5*SPLITSCREEN_MULTIPLIER) + BACKGROUND_H + GetTextWidth( player( name ), UI_FONT_SMALL, TEXTSIZE_SMALL ) + BACKGROUND_H + (5*SPLITSCREEN_MULTIPLIER) )
		
		#undef	BACKGROUND_X
		#define BACKGROUND_X				(-(BACKGROUND_W/2))
		
		#undef	BACKGROUND_Y
		#define BACKGROUND_Y				(-70*SPLITSCREEN_MULTIPLIER)
		
		// Spectator name bar
		PREPROC_SHADER_DRAW_ADV(	BACKGROUND_X,
									BACKGROUND_Y,
									BACKGROUND_W,
									BACKGROUND_H,
									HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_USER_BOTTOM,
									"white", 0 0 0 0.4 )

#ifdef CONSOLE
		// Cycle Previous
		itemDef
		{
			name			"CyclePrev"
			type			ITEM_TYPE_TEXT
			rect			0 BACKGROUND_Y BACKGROUND_H BACKGROUND_H HORIZONTAL_ALIGN_USER_CENTER VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( BACKGROUND_X+(5*SPLITSCREEN_MULTIPLIER) )
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_MIDDLE_LEFT
			textfont		UI_FONT_SMALL
			textscale		TEXTSIZE_SMALL
			forecolor		1 1 1 HUD_ALPHA
			text			"@PLATFORM_FOLLOWPREVPLAYER"
			visible			when( canSpecCycle() );
			decoration
			
			state
			{
				name		"Flash"
				forecolor	1 1 1 1
				onEnter
				{
					changeState Default 250;
				}
			}
		}
		
		// Cycle Next
		itemDef
		{
			name			"CycleNext"
			type			ITEM_TYPE_TEXT
			rect			0 BACKGROUND_Y BACKGROUND_H BACKGROUND_H HORIZONTAL_ALIGN_USER_CENTER VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( BACKGROUND_X+BACKGROUND_W-BACKGROUND_H-(5*SPLITSCREEN_MULTIPLIER) )
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_MIDDLE_RIGHT
			textfont		UI_FONT_SMALL
			textscale		TEXTSIZE_SMALL
			forecolor		1 1 1 HUD_ALPHA
			text			"@PLATFORM_FOLLOWNEXTPLAYER"
			visible			when( canSpecCycle() );
			decoration
			
			state
			{
				name		"Flash"
				forecolor	1 1 1 1
				onEnter
				{
					changeState Default 250;
				}
			}
		}		
#endif // #ifdef CONSOLE

		// "SPECTATING" title
		itemDef
		{
			type			ITEM_TYPE_TEXT
			rect			0 (BACKGROUND_Y-8) 1 1 HORIZONTAL_ALIGN_USER_CENTER VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( (BACKGROUND_X+BACKGROUND_W/2) )
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_BOTTOM_CENTER
			textfont		UI_FONT_SMALL
			textscale		TEXTSIZE_SMALL
			forecolor		1 1 1 HUD_ALPHA
			text			"@MPUI_SPECTATING_CAPS"
			visible			1
			decoration
		}

		// Player name
		itemDef
		{
			name			"SpectatorName"
			type			ITEM_TYPE_TEXT
			rect			0 BACKGROUND_Y SPEC_HUD_WIDTH (20*SPLITSCREEN_MULTIPLIER) HORIZONTAL_ALIGN_USER_CENTER VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( BACKGROUND_X )
			exp				rect W( BACKGROUND_W )
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			textfont		UI_FONT_SMALL
			textscale		TEXTSIZE_SMALL
			forecolor		1 1 1 HUD_ALPHA
			exp text		( player( name ) );
			visible			1
			decoration
			
			state
			{
				name		"Flash"
				forecolor	1 1 0 1
				onEnter
				{
					changeState Default 500;
				}
			}
		}

#ifdef CONSOLE	
		// Free Cam Button
		itemDef
		{
			name			"SpecViewToggle"
			type			ITEM_TYPE_TEXT
			rect			0 (BACKGROUND_Y+BACKGROUND_H+(10*SPLITSCREEN_MULTIPLIER)) 2 2 HORIZONTAL_ALIGN_USER_CENTER VERTICAL_ALIGN_USER_BOTTOM
			exp				rect X( (BACKGROUND_X+BACKGROUND_W/2) )
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_TOP_CENTER
			textfont		UI_FONT_NORMAL
			textscale		TEXTSIZE_DEFAULT
			forecolor		1 1 1 HUD_ALPHA
			text			"@PLATFORM_SPEC_FREELOOK"
			visible			when ( dvarInt( cg_thirdPerson ) == 0 );
			visibilityBits	bits( BIT_POF_SPEC_ALLOW_FREELOOK BIT_POF_FOLLOW );
			decoration
			
			state
			{
				name		"Flash"
				forecolor	1 1 0 1
				onEnter
				{
					changeState Default 500;
				}
			}
		}
#endif // #ifdef CONSOLE
	}
}
